<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxinet.jeesns.dao.group.IGroupTopicDao">
  <resultMap id="GroupTopicResult" type="GroupTopic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="collectTime" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="archive_id" jdbcType="INTEGER" property="archiveId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="is_essence" jdbcType="INTEGER" property="isEssence" />
    <result column="is_top" jdbcType="INTEGER" property="isTop" />
  </resultMap>

  <select id="listByPage" resultMap="GroupTopicResult">

      SELECT
      a.id,
      a.group_id AS 'group.id',
      a.collect_time,
      a. STATUS,
      a.is_top,
      a.is_essence,
      a.groupstatus,
      b.*, c. NAME 'group.name',
      b.member_id AS memberId,
      b.member_id AS 'member.id',
      d. NAME AS 'member.name',
      d.avatar AS 'member.avatar',
      c.name AS groupName,
      count(e.id) as topicComment
      FROM
      tbl_group_topic AS a
      LEFT JOIN tbl_archive AS b ON a.archive_id = b.archive_id
      LEFT JOIN tbl_group AS c ON a.group_id = c.id
      LEFT JOIN tbl_member AS d ON b.member_id = d.id
      LEFT JOIN tbl_group_topic_comment e ON a.id=e.group_topic_id

      <where>
          a.status=1 and c.status=1
          <if test="groupId &gt; 0">
              and  a.group_id = #{groupId}
          </if>
          <if test="key != null and key != ''">
              and b.title LIKE #{key}
          </if>
          <if test="status != 2">
              and a.status = #{status}
          </if>
          <if test="memberId &gt; 0">
              and b.member_id = #{memberId}
          </if>
      </where>
      GROUP BY a.id desc
  </select>

  <select id="findById" parameterType="java.lang.Integer" resultMap="GroupTopicResult">
    select a.id,a.group_id as 'group.id', a.collect_time, a.status,a.is_top,a.is_essence,a.groupstatus,b.*,c.name 'group.name',c.introduce as 'group.introduce',c.logo 'group.logo',b.member_id as memberId,b.member_id as 'member.id',d.name as 'member.name',d.avatar as 'member.avatar',d.introduce as 'member.introduce',
    count(e.id) as topicComment,
    (CASE WHEN (SELECT id FROM tbl_archive_favor WHERE archive_id=b.archive_id AND member_id=#{loginMemberId}) IS NULL THEN 0 ELSE 1 END) isFavor
    from tbl_group_topic as a INNER JOIN tbl_archive as b ON a.archive_id = b.archive_id
    LEFT JOIN tbl_group as c ON a.group_id = c.id LEFT JOIN tbl_member as d on b.member_id=d.id
    LEFT JOIN tbl_group_topic_comment e on a.id=e.group_topic_id
    where a.id = #{id}
  </select>
  <delete id="delete" parameterType="java.lang.Integer">
    delete from tbl_action_log where type=4 and foreign_id = #{id};
    delete from tbl_group_topic where id = #{id}
  </delete>
  <insert id="save" keyProperty="id" useGeneratedKeys="true">
    insert into tbl_group_topic (collect_time, group_id, archive_id,status,groupstatus) values (now(), #{groupId}, #{archiveId},#{status},#{groupstatus})
  </insert>
  <update id="audit">
    UPDATE tbl_group_topic SET status = 1 WHERE id = #{id}
  </update>
  <update id="top">
    UPDATE tbl_group_topic SET is_top = #{top} WHERE id = #{id}
  </update>
  <update id="essence">
    UPDATE tbl_group_topic SET is_essence = #{essence} WHERE id = #{id}
  </update>

  <update id="update" parameterType="GroupTopic">
    UPDATE tbl_group_topic SET group_id = #{groupId} ,groupstatus=#{groupstatus} WHERE id = #{id}
  </update>



  <!--首页帖子列表（自定义条件查询）-->
  <select id="listByCustom" resultMap="GroupTopicResult">
        select
      a.id,
      a.group_id as 'group.id',
      a.collect_time,
      a.status,
      a.is_top,
      a.is_essence,
      b.*,
      c.name 'group.name',
      b.member_id as memberId,
      b.member_id as 'member.id',
      d.name as 'member.name',
      d.avatar as 'member.avatar'
      from
      tbl_group_topic as a
      LEFT JOIN tbl_archive as b ON a.archive_id = b.archive_id
      LEFT JOIN tbl_group as c ON a.group_id = c.id
      LEFT JOIN tbl_member as d on b.member_id=d.id
      <where>
            AND a.status = 1
            AND c.status = 1
            <if test="gid &gt; 0">
              AND  a.group_id = #{gid}
            </if>
            <if test="day &gt; 0">
              AND  DATEDIFF(now(),b.create_time) &lt;= #{day} AND DATEDIFF(now(),b.create_time) &gt;= 0
            </if>
            <if test="thumbnail == 1">
              AND b.thumbnail is not NULL
            </if>
      </where>
          ORDER BY
        <choose>
            <when test="sort == 'id'">
              id
            </when >
            <when test="sort == 'view_count'">
              view_count
            </when >
            <when test="sort == 'update_time'">
              update_time
            </when >
            <when test="sort == 'favor'">
              favor
            </when >
            <when test="sort == 'favor'">
              favor
            </when >
            <otherwise>
              id
            </otherwise>

        </choose>
          DESC
        limit 0,#{num}
  </select>


  <!--后台帖子列表-->
  <!--BUG 待调试-->
  <select id="listByTopicPage" resultMap="GroupTopicResult">
      SELECT
      b.id,
      b.groupstatus,
      b.group_id AS 'group.id',
      b.collect_time,
      b. STATUS,
      b.is_top,
      b.is_essence,
      a.*, c. NAME 'group.name',
      a.member_id AS memberId,
      a.member_id AS 'member.id',
      d. NAME AS 'member.name',
      d.avatar AS 'member.avatar'
      FROM
      tbl_archive AS a

      LEFT JOIN tbl_group_topic AS b ON b.archive_id = a.archive_id
      LEFT JOIN tbl_group AS c ON b.group_id = c.id
      LEFT JOIN tbl_member AS d ON a.member_id = d.id
    <where>
        AND a.post_type=0

        <if test="key != null and key != ''">
            and a.title LIKE #{key}
        </if>

    </where>

      GROUP  BY a.archive_id desc
  </select>

  <!--修改帖子的审核状态-->
  <update id="changeTopicStatus">
    update tbl_group_topic set status=(CASE WHEN status=0 THEN 1 ELSE 0 END) where id = #{id}
  </update>

  <!--首页所有帖子列表-->
    <select id="groupTopicList" resultMap="GroupTopicResult">
     SELECT
      a.id,
      a.group_id AS 'group.id',
      a.collect_time,
      a. STATUS,
      a.is_top,
      a.is_essence,
	  a.groupstatus,
      b.*, c. NAME 'group.name',
      b.member_id AS memberId,
      b.member_id AS 'member.id',
      d. NAME AS 'member.name',
      d.avatar AS 'member.avatar',
	  c.name AS groupName,
      count(e.id) as topicComment
      FROM
      tbl_group_topic AS a
      LEFT JOIN tbl_archive AS b ON a.archive_id = b.archive_id
      LEFT JOIN tbl_group AS c ON a.group_id = c.id
      LEFT JOIN tbl_member AS d ON b.member_id = d.id
      LEFT JOIN tbl_group_topic_comment e ON a.id=e.group_topic_id
      where a.status=1 and c.status=1
      GROUP BY a.id desc

  </select>

  <!--搜索帖子2018年1月6日14:11:39-->
  <select id="solrList" resultMap="GroupTopicResult">

SELECT
	a.id,
	a.group_id AS 'group.id',
	a.collect_time,
	a. STATUS,
    a.groupstatus,
	b.*,
	c.id AS c_id,
    c. NAME 'group.name',
    b.member_id AS memberId,
    b.member_id AS 'member.id',
	c. STATUS AS c_status,

	d.id AS m_id,
	d. NAME AS 'member.name',
	d.email AS m_email,
	d.phone AS m_phone,
	d.avatar AS m_avatar,
	d.sex AS m_sex,
	d.money AS m_money,
	d.score AS m_score,
	d.follows AS m_follows,
	d.fans AS m_fans,
	d.is_admin AS m_is_admin,
	d.introduce AS m_introduce,
	d. STATUS AS m_status,
	d.is_active AS m_fm_is_activeans,
    count(e.id) AS topicComment
    FROM
	tbl_group_topic AS a
    LEFT JOIN tbl_archive AS b ON a.archive_id = b.archive_id
    LEFT JOIN tbl_group AS c ON a.group_id = c.id
    LEFT JOIN tbl_member AS d ON b.member_id = d.id
    LEFT JOIN tbl_group_topic_comment e on a.id=e.group_topic_id

    <where>

      <if test="key != null and key != ''">
           b.title LIKE #{key}
      </if>
      <if test="status != 2">
          and a.status = #{status}
      </if>
      <if test="memberId &gt; 0">
          and b.member_id = #{memberId}
      </if>
    </where>

     GROUP by a.id DESC

  </select>

    <select id="byGroupStatus" resultMap="GroupTopicResult">
      select a.id,b.title,b.view_count from tbl_group_topic a LEFT JOIN tbl_archive b on a.archive_id =b.archive_id  where a.groupstatus =0  ORDER BY b.view_count  desc limit 5
    </select>
    <select id="byGroupStatusList" resultMap="GroupTopicResult">
        select a.id,b.title,b.view_count from tbl_group_topic a LEFT JOIN tbl_archive b on a.archive_id =b.archive_id  where a.groupstatus =1  ORDER BY b.view_count  desc limit 5
    </select>

    <!--问题帖子列表-->
    <select id="solrWenTi" resultMap="GroupTopicResult">

      SELECT
      a.id,
      a.group_id AS 'group.id',
      a.collect_time,
      a. STATUS,
      a.is_top,
      a.is_essence,
	  a.groupstatus,
      b.*, c. NAME 'group.name',
      b.member_id AS memberId,
      b.member_id AS 'member.id',
      d. NAME AS 'member.name',
      d.avatar AS 'member.avatar',
	  c.name AS groupName,
      count(e.id) as topicComment
      FROM
      tbl_group_topic AS a
      LEFT JOIN tbl_archive AS b ON a.archive_id = b.archive_id
      LEFT JOIN tbl_group AS c ON a.group_id = c.id
      LEFT JOIN tbl_member AS d ON b.member_id = d.id
      LEFT JOIN tbl_group_topic_comment e ON a.id=e.group_topic_id
      where a.status=1 and c.status=1 and a.groupstatus=0
      GROUP BY a.id desc
    </select>
    <!--文章帖子列表-->
    <select id="solrWenZhang" resultMap="GroupTopicResult">

        SELECT
        a.id,
        a.group_id AS 'group.id',
        a.collect_time,
        a. STATUS,
        a.is_top,
        a.is_essence,
        a.groupstatus,
        b.*, c. NAME 'group.name',
        b.member_id AS memberId,
        b.member_id AS 'member.id',
        d. NAME AS 'member.name',
        d.avatar AS 'member.avatar',
        c.name AS groupName,
        count(e.id) as topicComment
        FROM
        tbl_group_topic AS a
        LEFT JOIN tbl_archive AS b ON a.archive_id = b.archive_id
        LEFT JOIN tbl_group AS c ON a.group_id = c.id
        LEFT JOIN tbl_member AS d ON b.member_id = d.id
        LEFT JOIN tbl_group_topic_comment e ON a.id=e.group_topic_id
        where a.status=1 and c.status=1 and a.groupstatus=1
        GROUP BY a.id desc
    </select>





</mapper>